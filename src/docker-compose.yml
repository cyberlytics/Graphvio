version: '3.4'
services:
  # Lokale Datenbank
  database:
    build: './images/database/'
    volumes:
      - ./images/data/:/home/neo4f/data/
    container_name: neo4j
    hostname: neo4j
    ports:
      - "7474:7474"
      - "7687:7687"
    networks:
      - network-backend
  
  # Backend
  backend:   
    build:
      context: './images/backend/'
      dockerfile: 'Backend.API/Dockerfile'
    ports:
      - "80:80"
      - "44357:44357"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    networks:
      - network-backend
      - network-frontend
    depends_on:
      - database
  
  # Frontend (React.js)
  node:
    build: './images/frontend/'
    volumes:
      - ./images/frontend/:/home/app/
      - /home/app/node_modules
    ports:
      - "3000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - BACKEND_SERVER=backend
    networks:
      - network-frontend
    depends_on:
      - backend

networks:
  network-backend:
    name: backend
    driver: bridge # Bridge ist Docker-Default.
    # internal: true # Wenn internal auf true gesetzt wird, ist das Netzwerk nicht mehr standardmäßig vom Host aufrufbar. Während Development noch hinderlich.
  network-frontend:
    name: frontend
    driver: bridge # Bridge ist Docker-Default.
